buildscript {
	dependencies {
		classpath 'org.postgresql:postgresql:42.7.3'
		classpath 'org.flywaydb:flyway-database-postgresql:10.13.0'
	}
}

plugins {
	id 'java'
	id 'org.springframework.boot' version '3.3.2'
	id 'io.spring.dependency-management' version '1.1.6'
	id("org.flywaydb.flyway") version "10.13.0"
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}


repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	runtimeOnly 'org.postgresql:postgresql'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
	compileOnly 'org.projectlombok:lombok'
	implementation 'org.postgresql:postgresql'
	implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.0.4'
	annotationProcessor "org.projectlombok:lombok"
	implementation 'org.flywaydb:flyway-core'
	implementation 'org.flywaydb:flyway-database-postgresql'
}

flyway {
	url = 'jdbc:postgresql://localhost:5432/mydatabase'
	user = 'postgres'
	password = System.getenv('DATABASE_PASSWORD')
	println("Using DB_PASSWORD: ${System.getenv("DATABASE_PASSWORD") ?: ""}")
}

tasks.named('test') {
	useJUnitPlatform()
}
